services:
  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_backend
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - backend_vendor:/var/www/html/vendor
    ports:
      - "8000:8000"
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: laravel
      REDIS_HOST: redis
      REDIS_PORT: 6379
      QUEUE_CONNECTION: redis
      BROADCAST_DRIVER: reverb
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - laravel_network

  reverb:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_reverb
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - backend_vendor:/var/www/html/vendor
    ports:
      - "8080:8080"
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: laravel
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REVERB_APP_ID: laravel-app
      REVERB_APP_KEY: local-key
      REVERB_APP_SECRET: local-secret
      REVERB_HOST: 0.0.0.0
      REVERB_PORT: 8080
      REVERB_SCHEME: http
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - laravel_network
    command: php artisan reverb:start --host=0.0.0.0 --port=8080

  horizon:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_horizon
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - backend_vendor:/var/www/html/vendor
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: laravel
      REDIS_HOST: redis
      REDIS_PORT: 6379
      QUEUE_CONNECTION: redis
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - laravel_network
    command: php artisan horizon

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: laravel_frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
      - VITE_PROXY_TARGET=http://localhost:8000
      - VITE_REVERB_HOST=localhost
      - VITE_REVERB_PORT=8080
      - VITE_REVERB_SCHEME=http
      - VITE_REVERB_APP_KEY=local-key
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  backend_vendor:
  frontend_node_modules:
