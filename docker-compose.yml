services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.dashboard.address=:8080
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - laravel_network

  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_backend
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - backend_vendor:/var/www/html/vendor
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: laravel
      REDIS_HOST: redis
      REDIS_PORT: 6379
      QUEUE_CONNECTION: redis
      BROADCAST_DRIVER: pusher
      PUSHER_APP_ID: predictive-patterns
      PUSHER_APP_KEY: local-key
      PUSHER_APP_SECRET: local-secret
      PUSHER_HOST: sockudo
      PUSHER_PORT: 6001
      PUSHER_SCHEME: http
      RUN_SEEDERS: "false"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      sockudo:
        condition: service_started
    networks:
      - laravel_network
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`api.localhost`)
      - traefik.http.routers.backend.entrypoints=web
      - traefik.http.services.backend.loadbalancer.server.port=8000

  sockudo:
    image: sockudo/sockudo:latest
    container_name: sockudo
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    environment:
      HOST: 0.0.0.0
      PORT: 6001
      METRICS_ENABLED: "true"
      METRICS_PORT: 9601
      SOCKUDO_DEFAULT_APP_ID: predictive-patterns
      SOCKUDO_DEFAULT_APP_KEY: local-key
      SOCKUDO_DEFAULT_APP_SECRET: local-secret
      SOCKUDO_ENABLE_CLIENT_MESSAGES: "true"
    networks:
      - laravel_network
    labels:
      - traefik.enable=true
      - traefik.http.routers.sockudo.rule=Host(`ws.localhost`)
      - traefik.http.routers.sockudo.entrypoints=web
      - traefik.http.services.sockudo.loadbalancer.server.port=6001

  horizon:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_horizon
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - backend_vendor:/var/www/html/vendor
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: laravel
      REDIS_HOST: redis
      REDIS_PORT: 6379
      QUEUE_CONNECTION: redis
      BROADCAST_DRIVER: pusher
      PUSHER_APP_ID: predictive-patterns
      PUSHER_APP_KEY: local-key
      PUSHER_APP_SECRET: local-secret
      PUSHER_HOST: sockudo
      PUSHER_PORT: 6001
      PUSHER_SCHEME: http
      RUN_MIGRATIONS: "false"
      HORIZON_TRAINING_MEMORY: 1536
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 1G
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      sockudo:
        condition: service_started
      backend:
        condition: service_started
    networks:
      - laravel_network
    command: php artisan horizon

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: laravel_frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://api.localhost
      - VITE_PROXY_TARGET=http://api.localhost
      - VITE_PUSHER_HOST=ws.localhost
      - VITE_PUSHER_PORT=80
      - VITE_PUSHER_SCHEME=http
      - VITE_PUSHER_APP_KEY=local-key
    networks:
      - laravel_network
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`app.localhost`)
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.http.services.frontend.loadbalancer.server.port=3000

networks:
  laravel_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  backend_vendor:
  frontend_node_modules:
